<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>邵林区块链博客</title>
    <description>邵林，区块链底层开发者</description>
    <link>https://sllinye.github.io//</link>
    <atom:link href="https://sllinye.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 31 Jan 2018 01:00:45 +0800</pubDate>
    <lastBuildDate>Wed, 31 Jan 2018 01:00:45 +0800</lastBuildDate>
    <generator>Jekyll v3.5.1</generator>
    
      <item>
        <title>区块链 Go并发编程 之 管道 Channel</title>
        <description>&lt;h1 id=&quot;go-管道-channel&quot;&gt;GO 管道 channel&lt;/h1&gt;
&lt;h2 id=&quot;什么是管道&quot;&gt;什么是管道&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;管道是Go语言在语言级别上提供的goroutine间的&lt;strong&gt;通讯方式&lt;/strong&gt;，我们可以使用channel在多个goroutine之间传递消息。channel是&lt;strong&gt;进程内&lt;/strong&gt;的通讯方式，是不支持跨进程通信的，如果需要进程间通讯的话，可以使用Socket等网络方式。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;也可以简单的理解为：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;在多个线程之间传递数据，同步数据的一种手段，而对通道的操作本身也是同步数据，同一时刻，仅有一个线程可以向 channel 发送数据，同样的，同一时刻也只能有一个线程能从 channel 读取数据。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;chnnel-语法&quot;&gt;chnnel 语法&lt;/h2&gt;
&lt;h3 id=&quot;能够存储数据的类型&quot;&gt;能够存储数据的类型&lt;/h3&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//T 为类型&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//缓冲int类型&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;缓冲float&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;类型&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;可以设置别名&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type IntChan chan int&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;声明&quot;&gt;声明&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chan&lt;/code&gt;是声明管道的关键字&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//声明一个int类型变量a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inChan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//只能缓冲int 类型&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strChan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//声明一个strChan管道，并可以写入string类型&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//除了上面的声明方法还可以用`make`来声明&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;非缓冲chanel与缓冲channel对比&quot;&gt;非缓冲chanel与缓冲channel对比&lt;/h3&gt;
&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;//非缓冲管道，必须等待通道取数据，会出现堵塞&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;


&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//缓冲管道&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//长度 上面初始化的非缓冲通道，缓冲通道都为0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//容量  上面初始化的非缓冲通道为0，缓冲通道为10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;非缓冲channel：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;只能缓冲1个数据,无缓冲的读写实际为同步操作，必须一写一读操作匹配时，才会继续，否则会死锁。
非缓冲的读和写操作必须“相遇”才能执行，否则会阻塞。
比如快递员给你送快递，快递员送到你手里，签收完成后，快递员才可以离开&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;缓冲channel：
最大缓冲等于容量，相当于一个&lt;strong&gt;先进先出&lt;/strong&gt;的队列。有缓冲的管道，只有当管道容量已存满，在未取走值的情况下继续放值时才会发生阻塞。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;比如，快递员给你送快递，快递员把快递放到快递箱里面，如果快递箱放满了，没有取走情况下会出现堵塞&lt;/p&gt;

&lt;h2 id=&quot;从管道中-取值-的方法以及一些案例&quot;&gt;从管道中 取值 的方法以及一些案例&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;fmt.Println(&amp;lt;-c)//从管道中取值，取出c,并打印。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&amp;lt;-c //从管道中取值，不输出结果。(对于非缓存管道，必须把值取出来，才能放别的)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;a := &amp;lt;-c//将管道中取出的值，赋值给 a&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;k, ok := &amp;lt;-c //从管道里面取值赋值给k，如果赋值成功，ok 为 true，如果赋值不成功，ok 为 flase&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 创建一个管道&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 查看写入管道中数据的数量&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 查看管道的缓冲容量&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//写入数据，这条管道只能写入int类型&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// &amp;lt;-c //从管道里面取值&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// fmt.Println(&quot;从管道里面取值：&quot;, &amp;lt;-c)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//将管道里面取出来的值赋给a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a = &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//从管理里面取值赋给k，如果赋值成功，ok为true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;  &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;输出为&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;：&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;下面案例是错的，造成死锁原因，没有复制，但一直等待取值&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 创建一个管道&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 从管道里面取值赋给a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//管道内没有数据，无法取出，一直等待，出现死锁。&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;  &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;输出为&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fatal&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;goroutines&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;are&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asleep&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deadlock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;goroutine&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlockChain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;002&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_管道&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0x55&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;原因&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;：&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//a, ok := &amp;lt;-c //管道内没有数据，无法取出，一直等待，出现死锁。&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;解决上面案例的方法&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 创建一个管道&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//给管道传值&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 从管道里面取值赋给a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//同步&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;  &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;输出为&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;在子线程中去管道的值，让主线程休眠，给主线程足够读多时间&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 创建一个管道&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 从管道里面取值赋给a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//同步&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;  &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 休眠一会儿是为了等待子线程处理任务&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;输出为&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;sync&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WaitGroup&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 创建一个管道&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//子线程&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 从管道里面取值赋给a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//同步&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;  &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;输出为&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;channel-解决并发编程造成的死锁&quot;&gt;channel 解决并发编程造成的死锁&lt;/h2&gt;

&lt;p&gt;下面channle与sync多线程编程的对比&lt;/p&gt;

&lt;p&gt;非缓冲管道中，依次循环存入值，并逐个取出，并且在子线程&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WaitGroup&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//队列&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 先创建一个非缓冲管道&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//子线程&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//写入数据&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;写入数据&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//读取数据&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;读取数据&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; 实现，注意close与range结合&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;------&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// &amp;lt;-c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;++++++++++&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;


&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;注：
		for i := range c能够不断的读取channel里面的数据，直到该channel被显式的关闭。上面代码我们看到可以显式的关闭channel，生产者通过内置函数close关闭channel。关闭channel之后就无法再发送任何数据了，在消费方可以通过语法v, ok := &amp;lt;-ch测试channel是否被关闭。如果ok返回false，那么说明channel已经没有任何数据并且已经被关闭。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;队列，多个子线程执行完毕后关闭再 管道：&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//创建通道&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WaitGroup&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//队列&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;111111111&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;22222222&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;33333333&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

		&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// &amp;lt;-c  有返回值&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt;
多个子线程执行结束后，关闭通道：&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//通过通道代替队列&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//读取数据，如果通道done里面没有数据，就会出现线程堵塞，&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//直到有数据，才继续执行.&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//不在子线程 函数内，会死锁&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 28 Jan 2018 00:00:00 +0800</pubDate>
        <link>https://sllinye.github.io//2018/01/28/blockchain-Channel/</link>
        <guid isPermaLink="true">https://sllinye.github.io//2018/01/28/blockchain-Channel/</guid>
        
        <category>并发</category>
        
        
      </item>
    
      <item>
        <title>区块链 GO 主线程与子线程</title>
        <description>&lt;h1 id=&quot;基础概念&quot;&gt;基础概念&lt;/h1&gt;

&lt;p&gt;进程：一个正在运行的程序一般是一个进程，一个进程可以包含多个线程&lt;/p&gt;

&lt;p&gt;线程：一条有序的CPU命令的集合体&lt;/p&gt;

&lt;p&gt;多线程：多条有序的CPU命令的结合体&lt;/p&gt;

&lt;p&gt;备注：一个CPU在同一时刻只能执行一个CPU命令&lt;/p&gt;

&lt;p&gt;假设只有一个CPU，能不能进行多线程编程&lt;/p&gt;

&lt;p&gt;3个线程: 并发编程
线程1: 5个命令
线程2：3个命令
线程3: 8个命令&lt;/p&gt;

&lt;p&gt;3个线程: 串行编程
线程1: 5个命令
线程2：3个命令
线程3: 8个命令&lt;/p&gt;

&lt;p&gt;线程1，线程2，线程3，假设在只有一个CPU的情况，编发编程，
需要通过上下文切换，实现上下文的切片&lt;/p&gt;

&lt;p&gt;1.并发编程：多个线程，会有时间片的分配问题，多个线程之间会不断的切换
2.串行编程：根据添加线程的顺序，按照顺序一一执行&lt;/p&gt;

&lt;p&gt;多线程编程优点：分线程可以处理耗时操作，不会出现主线程阻塞
多线程编程缺点：资源竞争，内存消耗，死锁&lt;/p&gt;

&lt;p&gt;CPU有如下两种
1.物理CPU：
2.逻辑CPU&lt;/p&gt;

&lt;p&gt;一个物理CPU可以虚拟出多个逻辑CPU
8核同一时刻可以同时最多执行8个CPU命令&lt;/p&gt;

&lt;p&gt;golang的线程是一种并发机制&lt;/p&gt;

&lt;p&gt;定义好函数，要实现这个函数的并发执行，只要用go关键字就可以了&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package main

import &quot;fmt&quot;

// runtime：有两种形式，一种是一条直线，另一种是一个圈
// 当前demo中，仍然是一条直线
// 当程序执行到主函数中最后一个}时，整个程序结束
func main() {
	fmt.Println(&quot;foo() start&quot;)
	go foo() //把foo()的执行放到分线程里面
	fmt.Println(&quot;foo() end&quot;)
	fmt.Println(&quot;bar() start&quot;)
	go bar() //把bar()的执行放到分线程里面
	fmt.Println(&quot;bar() end&quot;)
	f1()
}

func f1() {
	for k := 0; k &amp;lt; 10; k++ {
		fmt.Println(&quot;k:&quot;, k)
	}
}

func foo() {
	for i := 0; i &amp;lt; 100; i++ {
		fmt.Println(&quot;i:&quot;, i)
	}
}

func bar() {
	for j := 0; j &amp;lt; 200; j++ {
		fmt.Println(&quot;j:&quot;, j)
	}
}

输出为：
foo() start
foo() end
bar() start
bar() end
k: 0
k: 1
k: 2
k: 3
k: 4
k: 5
k: 6
k: 7
k: 8
k: 9
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;这里，我们就可以看到子线程的死亡有两种途径，一种是子线程运行结束，另一种是主线程运行结束runtime主动杀死子线程。&lt;/p&gt;

&lt;p&gt;下面runtime是跑一个圈：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package main

import (
	&quot;fmt&quot;
	&quot;sync&quot;
	&quot;time&quot;
)

/*
const (
	Nanosecond  Duration = 1
	Microsecond          = 1000 * Nanosecond
	Millisecond          = 1000 * Microsecond
	Second               = 1000 * Millisecond
	Minute               = 60 * Second
	Hour                 = 60 * Minute
)
*/

var wg sync.WaitGroup

func main() {
	wg.Add(2) //添加两个线程
	go foo()  //线程1
	go bar()  //线程2
	wg.Wait() //等待，让runtime编程圆圈，当counter等于0，整个程序结束
}

func foo() {
	for i := 0; i &amp;lt; 45; i++ {
		fmt.Println(&quot;Foo:&quot;, i)
		time.Sleep(3 * time.Second) //耗时3秒
	}
	wg.Done()
}

func bar() {
	for i := 0; i &amp;lt; 45; i++ {
		fmt.Println(&quot;Bar:&quot;, i)
		time.Sleep(20 * time.Second) //耗时20秒
	}
	wg.Done()
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;设置机器能够参与执行的CPU的个数,
速度会提升很多&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package main

import (
	&quot;fmt&quot;
	&quot;runtime&quot;
	&quot;sync&quot;
	&quot;time&quot;
)

var wg sync.WaitGroup

// runtime.NumCPU() 逻辑CPU个数
// runtime.GOMAXPROCS设置机器能够参与执行的CPU的个数
// init()方法会在main函数之前执行
func init() {
	fmt.Println(&quot;init()&quot;)
	fmt.Println(runtime.NumCPU())

	runtime.GOMAXPROCS(runtime.NumCPU())
}

func main() {
	fmt.Println(&quot;main() start()&quot;)
	wg.Add(2)
	go foo()
	go bar()
	wg.Wait()
}

func foo() {
	for i := 0; i &amp;lt; 45; i++ {
		fmt.Println(&quot;Foo:&quot;, i)
		time.Sleep(3 * time.Millisecond)
	}
	wg.Done()
}

func bar() {
	for i := 0; i &amp;lt; 45; i++ {
		fmt.Println(&quot;Bar:&quot;, i)
		time.Sleep(20 * time.Millisecond)
	}
	wg.Done()
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;下面这个程序
主线程会等待子线程执行完，整个程序才结束&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package main

import (
	&quot;fmt&quot;
	&quot;sync&quot;
)

// go run -race main.go  检查是否有资源竞争
// vs
// go run main.go
var wg sync.WaitGroup

func main() {
	wg.Add(1)
	a := 1
	go func() { //子线程
		a = 2
		fmt.Println(&quot;a is func &quot;, a)
		wg.Done()
	}()
	a = 3
	fmt.Println(&quot;a is main&quot;, a)
	wg.Wait()
}
输出为
a is main 3
a is func  2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;下面这个demo，两个子线程执行完，程序才结束，
但哪个线程先执行不固定&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package main

import (
	&quot;fmt&quot;
	&quot;sync&quot;
)

var ticktCount int = 100

var wg sync.WaitGroup //一个队列

func main() {
	wg.Add(2)
	go f1()
	go f2()
	wg.Wait()
}

func f1() {
	ticktCount--
	fmt.Println(&quot;f1&quot;, ticktCount)
	wg.Done()
}

func f2() {
	ticktCount = ticktCount - 2
	fmt.Println(&quot;f2&quot;, ticktCount)
	wg.Done()
}
输出为：
f2 98
f1 97
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;若代码有资源竞争，对数据加锁
对子线程进行管理&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package main

import (
	&quot;fmt&quot;
	&quot;math/rand&quot;
	&quot;sync&quot;
	&quot;time&quot;
)

// 当前代码有资源竞争，我们需要对数据加锁

// go run -race main.go  竞争检测
// vs
// go run main.go

var wg sync.WaitGroup //管理线程的队列
var counter int       //全局变量
var mutex sync.Mutex  // 互斥

func main() {
	wg.Add(2)              //wg中的counter为2
	go incrementor(&quot;Foo:&quot;) //新增一个线程
	go incrementor(&quot;Bar:&quot;) //新增一个线程
	wg.Wait()              //主线程需要等待子线程的任务执行完成，才会继续往下执行
	fmt.Println(&quot;Final Counter:&quot;, counter)
}

func incrementor(s string) {
	// 不设置时间种子的话，每次生成的rand值相同
	rand.Seed(time.Now().UnixNano())
	for i := 0; i &amp;lt; 20; i++ {
		// rand.Intn 生成随机数
		time.Sleep(time.Duration(rand.Intn(3)) * time.Millisecond)
		mutex.Lock() //上锁，上锁后，被锁定的内容不会被两个或者多个线程同时竞争
		counter++
		fmt.Println(s, i, &quot;Counter:&quot;, counter)
		mutex.Unlock() //解锁
	}
	wg.Done()
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;除上面方法外
还可以使用原子操作&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package main

import (
	&quot;fmt&quot;
	&quot;math/rand&quot;
	&quot;sync&quot;
	&quot;sync/atomic&quot; //原子操作
	&quot;time&quot;
)

// 当前代码有资源竞争，我们需要对数据加锁

// go run -race main.go  竞争检测
// vs
// go run main.go

var wg sync.WaitGroup //管理线程的队列
var counter int64       //全局变量

// counter
// 原子操作：同一时刻同一条数据只能被一个线程拥有
// 非原子操作：同一时刻，同一条数据可能同时会被多个线程竞争

func main() {
	wg.Add(2)              //wg中的counter为2
	go incrementor(&quot;Foo:&quot;) //新增一个线程
	go incrementor(&quot;Bar:&quot;) //新增一个线程
	wg.Wait()              //主线程需要等待子线程的任务执行完成，才会继续往下执行
	fmt.Println(&quot;Final Counter:&quot;, counter)
}

func incrementor(s string) {
	// 不设置时间种子的话，每次生成的rand值相同
	rand.Seed(time.Now().UnixNano())
	for i := 0; i &amp;lt; 20; i++ {
		// rand.Intn 生成随机数
		time.Sleep(time.Duration(rand.Intn(3)) * time.Millisecond)

		//原子操作，下面的代码是让counter+1
		atomic.AddInt64(&amp;amp;counter, 1)
		fmt.Println(s, i, &quot;Counter:&quot;, counter)

	}
	wg.Done()
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 28 Jan 2018 00:00:00 +0800</pubDate>
        <link>https://sllinye.github.io//2018/01/28/blockchain-Thread/</link>
        <guid isPermaLink="true">https://sllinye.github.io//2018/01/28/blockchain-Thread/</guid>
        
        <category>并发</category>
        
        
      </item>
    
      <item>
        <title>区块链搭建环境之Ubuntu 16.04</title>
        <description>&lt;p&gt;#区块链搭建环境之Ubuntu 16.04
认识Ubuntu
Ubuntu（友帮拓、优般图、乌班图）是一个以桌面应用为主的开源GNU/Linux操作系统，Ubuntu 是基于Debian GNU/Linux，支持x86、amd64（即x64）和ppc架构，由全球化的专业开发团队（Canonical Ltd）打造的。&lt;/p&gt;

&lt;p&gt;官方的下载地址：https://www.ubuntu.com/index_kylin&lt;/p&gt;

&lt;p&gt;说明一下： 如果大家用的是Mac本，可以直接在Mac环境下开发，并且很方便，（对于Mac本，就买最贵的，梭哈，梭哈，梭哈~~~~）；如果用的是Windows本，可以做一个双系统，在Windows本上面直接安装Linux系统，用起来也不错。&lt;/p&gt;

&lt;h2 id=&quot;虚拟机&quot;&gt;虚拟机：&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Parallels_Desktop_13.2.0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;链接:https://pan.baidu.com/s/1pMfMber &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; 密码:a4ms&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Parallels Desktop 13 for Mac破解版是一款macOS平台上功能非常强大的虚拟机软件，相比于上一代提升了性能，搭载数以百计的新功能和更多工具，可供您在 Mac 和 Windows 上处理日常任务。清理驱动器、保护私人文件、下载视频、制作 GIF 等。针对 macOS High Sierra 和 Windows 10 Fall Creators Update 进行了优化。Parallels Desktop 13 将 Mac Touch Bar 集成到 Microsoft Outlook、Word、Excel 和 PowerPoint，以及 Internet Explorer、Microsoft Edge、Google Chrome™、Mozilla Firefox 和 Opera 等浏览器。
    双击压缩包，点击打开，按照提示一步步走即可，选择 buntu Linux 下载镜像文件。&lt;/p&gt;
&lt;h1 id=&quot;ubuntu-安装谷歌浏览&quot;&gt;Ubuntu 安装谷歌浏览&lt;/h1&gt;
&lt;p&gt;下载安装Google Chrome浏览 deb包&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;安装依赖&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get -f install libappindicator1 libindicator7&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;安装谷歌浏览器&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;ubuntu-搜狗输入法&quot;&gt;Ubuntu 搜狗输入法&lt;/h1&gt;
&lt;p&gt;下载下来deb包之后，直接&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo dpkg -i sogoupinyin_2.1.0.0086_amd64.deb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果遇到有依赖问题&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get -f install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;安装完之后，打开__Language Support__，将系统输入法设置为fcitx，然后重启/注销登录
&lt;img src=&quot;http://p396ounog.bkt.clouddn.com/5966382-a311fa59ba4cfba6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;登入系统后，配置fcitx，添加sogou输入法&lt;img src=&quot;http://p396ounog.bkt.clouddn.com/5966382-129c0665ce957f50.png&quot; alt=&quot;&quot; /&gt;
配置完重启虚拟机即可正常使用&lt;/p&gt;
&lt;h1 id=&quot;go-语言环境安装&quot;&gt;Go 语言环境安装&lt;/h1&gt;
&lt;p&gt;先去&lt;code class=&quot;highlighter-rouge&quot;&gt;https://golang.org/&lt;/code&gt;官网下载Go 语言安装包&lt;/p&gt;
&lt;h5 id=&quot;安装go&quot;&gt;安装Go&lt;/h5&gt;
&lt;p&gt;以管理员的身份（sudo）将安装包（压缩包）解压到/usr/local
在压缩包所在的文件夹下打开终端（也可以 cd 到压缩包所在的文件夹）&lt;/p&gt;

&lt;p&gt;在终端中输入命令&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo tar -C /usr/local -xzf go1.9.2.linux-amd64.t ar.gz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后系统会提示您输入密码，密码就是开机密码
解压完成后，&lt;/p&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local&lt;/code&gt;路径下面有一个&lt;code class=&quot;highlighter-rouge&quot;&gt;go&lt;/code&gt;文件夹
添加&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/go/bin&lt;/code&gt;到环境变量&lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt;中。&lt;/p&gt;

&lt;p&gt;通过&lt;code class=&quot;highlighter-rouge&quot;&gt;vi&lt;/code&gt;命令将&lt;code class=&quot;highlighter-rouge&quot;&gt;export PATH=$PATH:/usr/local/go/bin&lt;/code&gt;添加到&lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME/.profile &lt;/code&gt;中&lt;/p&gt;

&lt;p&gt;操作步骤如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vi $HOME/.profile
 &lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;收入&lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;切换到编辑模式，插入&lt;code class=&quot;highlighter-rouge&quot;&gt;export PATH=$PATH:/usr/local/go/bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  # ~/.profile: executed by the command interpreter for login shells.
  # This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
  # exists.
  # see /usr/share/doc/bash/examples/startup-files for examples.
  # the files are located in the bash-doc package.
  # the default umask is set in /etc/profile; for setting the umask
  # for ssh logins, install and configure the libpam-umask package.
  #umask 022
  # if running bash
if [ -n &quot;$BASH_VERSION&quot; ]; then
# include .bashrc if it exists if [ -f &quot;$HOME/.bashrc&quot; ]; then
. &quot;$HOME/.bashrc&quot; fi
fi
  # set PATH so it includes user's private bin directories
  PATH=&quot;$HOME/bin:$HOME/.local/bin:$PATH&quot;
  export PATH=$PATH:/usr/local/go/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;按&lt;code class=&quot;highlighter-rouge&quot;&gt;esc&lt;/code&gt;键切换到命令行模式，再输入&lt;code class=&quot;highlighter-rouge&quot;&gt;：&lt;/code&gt;，最后输入&lt;code class=&quot;highlighter-rouge&quot;&gt;wq&lt;/code&gt;保存并退出&lt;/li&gt;
  &lt;li&gt;执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:~ lin$ /usr/local$ source $HOME/.profile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试安装：在终端中输入&lt;code class=&quot;highlighter-rouge&quot;&gt;go version&lt;/code&gt; 检测版本号即可&lt;/p&gt;

&lt;h1 id=&quot;安装编辑器atom&quot;&gt;安装编辑器ATOM&lt;/h1&gt;
&lt;h5 id=&quot;安装-gdebi&quot;&gt;安装 &lt;code class=&quot;highlighter-rouge&quot;&gt;gdebi&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;如果没有安装&lt;code class=&quot;highlighter-rouge&quot;&gt;gdebi&lt;/code&gt;，请先安装&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get install gdebi
$ gdebi --version 0.9.5.7ubuntu1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;atom下载并安装&quot;&gt;Atom下载并安装&lt;/h5&gt;
&lt;p&gt;进入官网&lt;code class=&quot;highlighter-rouge&quot;&gt;https://atom.io/&lt;/code&gt;
下载&lt;code class=&quot;highlighter-rouge&quot;&gt;.deb&lt;/code&gt;文件
在压缩包所在的文件夹下打开终端，输入&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo gdebi atom-amd64.deb&lt;/code&gt;即可完成安装&lt;/p&gt;

&lt;p&gt;测试安装：在终端中输入&lt;code class=&quot;highlighter-rouge&quot;&gt;atom -version&lt;/code&gt;检测版本号&lt;/p&gt;

&lt;p&gt;atom字体大小设置：
菜单-&amp;gt;Edit-&amp;gt;Preference-&amp;gt;Editor-&amp;gt;Font Size&lt;/p&gt;

&lt;p&gt;atom目录字体大小
菜单-&amp;gt;Edit-&amp;gt;Stylesheet&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;目录：
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.tree-view {
  // background-color: whitesmoke;
  font-size: 28px
}
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Tab ：&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.tab-bar .tab {
    font-size: 16px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;安装插件：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;go-plus&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;file-icons&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 28 Jan 2018 00:00:00 +0800</pubDate>
        <link>https://sllinye.github.io//2018/01/28/blockchain-environment/</link>
        <guid isPermaLink="true">https://sllinye.github.io//2018/01/28/blockchain-environment/</guid>
        
        <category>区块链搭建环境之Ubuntu 16.04</category>
        
        
      </item>
    
      <item>
        <title>【李程】区块链演进及跨域安全解决方案</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;作者：李程，前联想、百度高级安全工程师，搜狗安全架构师，区块链底层开发者、架构师。&lt;/p&gt;

  &lt;p&gt;原文链接：&lt;a href=&quot;https://github.com/xianlimei/liaixian11030/wiki/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%BC%94%E8%BF%9B%E5%8F%8A%E8%B7%A8%E5%9F%9F%E5%AE%89%E5%85%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88&quot;&gt;https://github.com/xianlimei/liaixian11030/wiki&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/xianlimei/liaixian11030/39.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;说区块链域安全之前，笔者介绍下区块链相关技术背景，现在很多人只识比特币，不识区块链。&lt;/p&gt;

&lt;h1 id=&quot;一区块链发展的演变&quot;&gt;一、区块链发展的演变&lt;/h1&gt;

&lt;p&gt;回首2008年，由次贷危机引发的金融危机蔓延全球，11月份，一篇名为《Bitcoin:A peer-to-peer electronic cash system》的论文横空出世，当时只是在一小戳圈子里被讨论，大概没几个人知道论文的意义。时间的年轮很快转入新的一年，比特币第一版本代码发布，1月4日，创世块被挖出来，5天之后，第二个块产生，比特币网络正式启动，一个自称“中本聪”的人悄悄在互联网应用这片汪洋大海吹起一片涟漪，时至今日，这片涟漪已形成滔滔大浪。&lt;/p&gt;

&lt;p&gt;Blockchain V1.0主要应用于比特币和大型金融分类账，而Blockchain 2.0则在行业和应用领域获得动力和投资。然而，区块链从1.0向Blockchain 2.0的演变并不是一个简单的过程。这个转变的复杂性和挑战在下面描述的三个阶段被总结：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I. 注册阶段&lt;/strong&gt;：首先要解决注册相关的问题。区块链是可信和可追溯的，因为它采用“工作证明算法”和其他公认的规则来确保只能添加​​合法的区块。一旦一个块经过彻底的验证链接到区块链，它将被永久保存。互联网上的本地台账链数据库永远不会被破坏，记录的信息字段与生成时间相匹配。可信账本链中的所有信息都是独特的，防篡改的。因此，区块链可以用来记录各种类型的信息。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;II 验证阶段&lt;/strong&gt;：第二个改进方面是准确的验证。区块链是开放源代码和可共享的，允许各种组织和个人进入整个系统的运作。参与维护的每个节点都会收到整个数据库的完整副本，以确保信息的所有权。区块链是存储永久记录（如真实性验证，土地所有权，股权交易和其他应用程序）的理想解决方案。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;III 管理阶段&lt;/strong&gt;：这使我们进入第三阶段。在这里，关注智能管理势在必行。区块链粉丝认为，区块链的核心贡献是解决多点信息交互过程中的任何可信度问题。这个问题或挑战被创造为“拜占庭将军的问题”。顾名思义，这个问题起源于罗马帝国和拜占庭帝国。鉴于帝国的广阔领土，帝国军将领在地理上分离，难以互动。军队中还有叛徒，会误导将军的决定，阻止他们争取胜利。由于缺乏准确的信息，这使得难以达成共识。&lt;/p&gt;

&lt;p&gt;现在已经进入Blockchain 3.0时代，Blockchain 3.0仍然侧重于其衍生领域的应用和规范。区块链3.0的区别特点是引入了一个分散的域名系统 - Namecoin。下面介绍Namecoin及其功能及其挑战和应用的简要说明：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/xianlimei/liaixian11030/40.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;什么是Namecoin？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Namecoin提供的功能类似于传统DNS提供商提供的功能。主要区别在于Namecoin基于分散式区块链技术。正因为如此，Namecoin可以绕过互联网审查，确保信息的自由和中立的分布。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Namecoin的特点&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;在Namecoin中，没有可以改变域名的权力机构。例如，美国政府控制.com域名的DNS提供商，并且能够审查在该域名下注册的网站。然而，名称币对应于.bit域名，它不受任何机构的控制。该域名永久写入区块链，确保在网站上免费发布信息。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Namecoin的运作原理&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Namecoin通过点对点网络共享DNS查询表。只要有人正在运行Namecoin服务器应用程序，域名就可以访问，并且不受任何人的控制。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Namecoin的应用领域&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;由于.bit域名可以用来绕开监督和审查，所以适合自由和合法地传播信息。基于分散域名思想的应用程序Namecoin是首批将区块链技术应用于非货币领域的应用程序之一。这些应用程序拥有很高的研究价值。尽管意识形态可以应用于各个领域，但是目前有一些限制使它们不能普及。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Namecoin的主要限制&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;大多数浏览器默认不支持解析.bit网址，用户需要安装一个插件才能访问.bit网站。这个问题将阻止大多数用户访问.bit网站，使其难以普及。匿名，低成本和对审查的豁免使Namecoin容易被误用。用户可以使用.bit来托管非法内容或企业，不会受到法律后果。此外，中国的网站必须备案。由于.bit网站不能在中国录制，因此在国内无法使用。&lt;/code&gt;
***&lt;/p&gt;

&lt;h1 id=&quot;二区块链算法的演进&quot;&gt;二、区块链算法的演进&lt;/h1&gt;

&lt;p&gt;区块链的技术演进，从另一个层次看，也是算法的不断优化以及完善，Consensus和Algorithm可以说是区块链技术体系里的重要支柱。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;hash算法&lt;/strong&gt;，为什么呢，中本聪在设计比特币的时候其实有很多地方用到Hash函数，比如计算区块ID，计算交易ID，构造代币地址等。我们说的算法具体是指用何种Hash函数计算区块ID，所谓算法创新也就是在这个地方下功夫。反正现在只要一出什么山寨币就说自己发明了什么算法云云之类的话，笔者不妄下断言了^_^。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sha256算法&lt;/strong&gt;，除了生成地址中有一个环节使用了REPID-160算法，比特币系统中但凡有需要做Hash运算的地方都是用SHA256。随着比特币被更多人了解，大家开始好奇中本聪为何选择了SHA256，同时对SHA256的安全性发表各种意见，SHA256妥妥经受了质疑，到目前为止，没有公开的证据表明SHA256有漏洞，SHA256依然牢牢抗住保卫比特币安全的大旗。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scrypt算法&lt;/strong&gt;，后来随着显卡挖矿以及矿池的出现，社区开始担心矿池会导致算力集中，违背中本聪“一CPU一票”的最初设计理念。在那段时间，中心化的焦虑非常严重，讨论很激烈，比特币一次又一次“被死亡”，直到现在，针对矿池是否违背去中心化原则的争论仍在继续。无论如何，有人将矛头指向SHA256，认为是算法太容易导致矿机和矿池出现，并试图寻找更难的算法。恰逢其时，使用SCRYPT算法的莱特币（Litecoin）横空出世。据说SCRYPT是由一位著名的黑客开发，由于没有得到诸如SHA系列的严格的安全审查和全面论证，一直没被广泛推广使用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;串联算法&lt;/strong&gt;，2013年7月，夸克币（Quark）发布，首创使用多轮Hash算法，看似高大上，其实很简单，就是对输入数据运算了9次hash函数，前一轮运算结果作为后一轮运算的输入。这9轮Hash共使用6种加密算法，分别为BLAKE, BMW, GROESTL, JH, KECCAK和SKEIN，这些都是公认的安全Hash算法，并且早已存在现成的实现代码。这种多轮Hash一出现就给人造成直观上很安全很强大的感觉，追捧者无数。现今价格依然坚挺的达世币（DASH，前身是暗黑币，Darkcoin，）接过下一棒，率先使用11种加密算法（BLAKE, BMW, GROESTL, JH, KECCAK, SKEIN, LUFFA, CUBEHASH, SHAVITE, SIMD, ECHO），美其名曰X11，紧接着X13，X15这一系列就有人开发出来了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;并联算法&lt;/strong&gt;，有人串联，就有人并联，Heavycoin（HVC）率先做了尝试。HVC如今在国内名不见经传，当时还是名噪一时，首次实现链上游戏，作者是俄罗斯人，后来不幸英年早逝，在币圈引起一阵惋惜。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;primecoin算法&lt;/strong&gt;，正当一部分人在算法探索之路上进行的如火如荼之时，另一部分人的声音也非常刺耳，那就是指责POW浪费能源（彼时POS机制已经实现）。POW党虽极力维护，但也承认耗费能源这一事实。这一指责打开了另一条探索之路，即如果能找到一种算法，既能维护区块链安全，这些Hash运算又能在其他方面产生价值，那简直更完美。在这条探索之路上最让人振奋人心的成果来自于Sunny King（这大神之前已经开发了Peercoin，点点币）发明的素数币（Primecoin）。素数币算法的核心理念是：在做Hash运算的同时寻找大素数。素数如今已被广泛应用于各个领域，但人类对他的认识还是有限。素数在数轴上不但稀有（相对于偶数而言），而且分布不规律，在数轴上寻找素数只能盲目搜索探测，这正是POW的特征。POW还有另一个要求是容易验证，这方面人类经过几百年探索已经获得一些成果。素数币使用两种方法测试，首先进行费马测试（Fermat Test），通过则再进行欧拉-拉格朗日-立夫习兹测试（Euler-Lagrange-Lifchitz Test），还通过测试则被视为是素数。需要指出的是，这种方法并不能保证通过测试的数百分百是素数，不过这并不影响系统运行，即便测试结果错误，只要每个节点都认为是素数就行。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ethash算法&lt;/strong&gt;，以太坊（Ethereum）一开始就打算使用POS方式，但由于POS设计存在一些问题，开发团队决定在以太坊1.0阶段使用POW方式，预计在Serenity阶段转入POS。以太坊POW算法叫Ethash，虽只是一个过渡算法，但开发团队一点也不含糊，一如既往发扬其“简单问题复杂化，繁琐细节秀智商”的设计风格。Ethash 是最新版本的 Dagger-Hashimoto改良算法，是Hashimoto算法结合Dagger算法产成的一个新变种。Ethash设计时就明确两大目标：&lt;/p&gt;

&lt;p&gt;1）抵御矿机性能（ASIC-resistance），团队希望CPU也能参与挖矿获得收益。&lt;/p&gt;

&lt;p&gt;2）轻客户端可快速验证（Light client verifiability）。&lt;/p&gt;

&lt;p&gt;基于以上两个目标，开发团队最后倒腾出来的Ethash挖矿时基本与CPU性能无关，却和内存大小和内存带宽成正相关。不过在实现上还是借鉴了SHA3的设计思路，但是使用的”SHA3_256” ,”SHA3_512”与标准实现很不同。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ethash算法&lt;/strong&gt;，基本流程是这样的：对于每一个块，首先计算一个种子（seed），该种子只和当前块的信息有关；然后根据种子生成一个32M的随机数据集（Cache）；紧接着根据Cache生成一个1GB大小的数据集合（DAG），DAG可以理解为一个完整的搜索空间，挖矿的过程就是从DAG中随机选择元素（类似于比特币挖矿中查找合适Nonce）再进行哈希运算。可以从Cache快速计算DAG指定位置的元素，进而哈希验证。此外还要求对Cache和DAG进行周期性更新，每1000个块更新一次，并且规定DAG的大小随着时间推移线性增长，从1G开始，每年大约增长7G左右。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;equihash算法&lt;/strong&gt;，最近在国内发展势头最猛的莫过于Zcash，该币种最大的特点是使用零知识证明实现隐私交易。距离发布还有几天，但从社区讨论来看，各方矿工都已在磨刀霍霍。Zcash对于算法的选择非常慎重，在先后考量了SHA256D，SCRYPT，CUCKOO HASH以及LYRA2等算法后，最终选择Equihash。Equihash算法由Alex Biryukov 和 Dmitry Khovratovich联合发明，其理论依据是一个著名的计算法科学及密码学问题——广义生日悖论问题。Equihash是一个内存（ARM）依赖型算法，机器算力大小主要取决于拥有多少内存，根据两位发明者的论文描述，该算法执行至少需要700M内存，1.8 GHz CPU计算30秒，经Zcash项目优化后，目前每个挖矿线程需要1G内存，因此Zcash官方认为该算法在短时间内很难出现矿机（ASIC）。此外，Zcash官方还相信该算法比较公平，他们认为很难有人或者机构能够对算法偷偷进行优化，因为广义生日悖论是一个已经被广泛研究的问题。此外，Equihash算法非常容易验证，这对于未来在受限设备上实现Zcash轻客户端非常重要。Zcash官方团队选择Equihash完全出于抵御矿机性能的需求，他们在官方博客中也承认并不敢确保Equihash一定是安全的，并表示如果发现Equihash存在问题，或者发现更优算法，Zcash会改变POW算法。&lt;/p&gt;

&lt;p&gt;Blockchain 以后的发展肯定是越来越侧重于行业领域的发展而不仅仅是货币金融体系的发展，安全领域还没有人进行探索与实践，笔者先抛砖引玉，谈谈区块链在安全领域的应用。&lt;/p&gt;

&lt;h1 id=&quot;三区块链域安全解决方案&quot;&gt;三、区块链域安全解决方案&lt;/h1&gt;
&lt;p&gt;在区块链网络中，跨域保护的角色将由高安全性平台（称为高安全业务节点（HSBN））上安装的区块链网络对等执行。 分布式跨域区块链商业网络内的数据移动采取加密保护的事务更新的形式到由业务网络的特定成员专用信道中的每个节点持有的共享分类帐。区块链商业网络的其他对等节点驻留在一个或另一个安全区域，不管是高还是低，接收被批准的分类账交易的保护区块。 签署的分类账更新通过边界HSBN发生在对面的安全域上，以保证区块链提供的安全控制不能被绕过或覆盖。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/xianlimei/liaixian11030/41.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;四区块链域解决方案优点&quot;&gt;四、区块链域解决方案优点&lt;/h1&gt;

&lt;p&gt;区块链跨领域解决方案可以提高您的信息交换过程中的效率，并改善信息交流的可访问性以及可追溯性。具体来说，它提供了：&lt;/p&gt;

&lt;p&gt;1、无论网络域如何，每个资产在整个生命周期中都是单一的共享视图。在一个标准的跨域保护中，没有办法确保保护的每一边驻留的信息在其生命周期中保持同步。保护的能见度和控制范围是有限的。在整个生命周期内对资产信息进行可审计控制和监督。共享分类账提供了一个确定的，不可改变的记录，即使是在网络安全领域，共享的内容和由谁分享的内容。这消除了试图追踪并将单独的仅保护数据流连接在一起的情况。&lt;/p&gt;

&lt;p&gt;2、信息共享，而不仅仅是移动数据。数据控制和共享自然而然地通过共享账本作为正常区块链业务网络的一部分进行。传统的保护只是移动数据。将信息共享扩展到其他安全域可以通过部署额外的HSBN托管的节点和通道轻松完成。&lt;/p&gt;

&lt;p&gt;3、降低成本，提高安全性。该技术利用现有开源区块链即可能实现，目前在做的商业的有IBM等企业。&lt;/p&gt;

&lt;h1 id=&quot;五参考资料&quot;&gt;五、参考资料&lt;/h1&gt;

&lt;p&gt;https://www.ibm.com/blogs/blockchain/2018/01/blockchain-as-a-cross-domain-security-solution/&lt;/p&gt;

&lt;p&gt;https://www.qkldx.net/topic/457/&lt;/p&gt;

&lt;p&gt;https://richtopia.com/emerging-technologies/blockchain-solutions-for-cyber-data-security&lt;/p&gt;

&lt;p&gt;https://www.accenture.com/us-en/service-blockchain-security&lt;/p&gt;

&lt;p&gt;https://www.hyperledger.org/&lt;/p&gt;

&lt;p&gt;https://www.alibabacloud.com/blog/The-Evolution-of-Blockchain-Development_p73812&lt;/p&gt;

&lt;p&gt;如有任何问题可以加&lt;code class=&quot;highlighter-rouge&quot;&gt;qq&lt;/code&gt;群&lt;code class=&quot;highlighter-rouge&quot;&gt;581076433&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 20 Jan 2018 00:00:00 +0800</pubDate>
        <link>https://sllinye.github.io//2018/01/20/blockchain-security/</link>
        <guid isPermaLink="true">https://sllinye.github.io//2018/01/20/blockchain-security/</guid>
        
        <category>区块链安全</category>
        
        
      </item>
    
      <item>
        <title>人人网人人坊 RRCoin 白皮书PDF下载</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;hi，大家好，我是春哥，这两天人人网公司成立了RRCoin基金会，发布了RRCoin白皮书，股票大涨，下面是RRCoin白皮书，PDF完整版下载请在公众号回复&lt;code class=&quot;highlighter-rouge&quot;&gt;RRCoin&lt;/code&gt;自动获取下载链接。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050001.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050002.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050003.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050004.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050005.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050006.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050007.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050008.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050009.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050010.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050011.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050012.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050013.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050014.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050015.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050016.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050017.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050018.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050019.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050020.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050021.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/201801050022.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;获取完整下载链接&quot;&gt;获取完整下载链接&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;关注公众号回复&lt;code class=&quot;highlighter-rouge&quot;&gt;RRCoin&lt;/code&gt;自动获取PDF下载链接，或者关注区块链问答社区直接下载和互动。&lt;/strong&gt;，&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/%E5%85%AC%E4%BC%97%E5%8F%B7-%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83.png&quot; alt=&quot;RRCoin白皮书PDF下载链接&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 05 Jan 2018 00:00:00 +0800</pubDate>
        <link>https://sllinye.github.io//2018/01/05/rrcoin-pdf/</link>
        <guid isPermaLink="true">https://sllinye.github.io//2018/01/05/rrcoin-pdf/</guid>
        
        <category>白皮书</category>
        
        
      </item>
    
      <item>
        <title>Filecoin 2017 Q4 Update</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/filecoin-header-2017-q4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dear Filecoin supporters, miners, users, investors, and broader community,&lt;/p&gt;

&lt;p&gt;Since the completion of the token sale, we have been heads down turning Filecoin’s tremendous potential into reality – from implementing the core parts of the Filecoin protocol to growing our team with the best talent we can find. Below is an update from our team, as well as a set of specific “asks” for you, our community.&lt;/p&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#1-CommunityUpdates-an-Overview&quot;&gt;Community Updates - an Overview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-Asks-How-You-Can-Help&quot;&gt;Asks - How You Can Help&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-Launch-of-the-Filecoin-Blog&quot;&gt;Launch of the Filecoin Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-Growth-and-Adoption-of-IPFS&quot;&gt;Growth and Adoption of IPFS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-Launch-of-the-SAFT-Project&quot;&gt;Launch of the SAFT project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-Growing-the-Team&quot;&gt;Growing the Team&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-Filecoin-Engineering-Development&quot;&gt;Filecoin Engineering &amp;amp; Development&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8-Investor-SAFTs-and-Warnings&quot;&gt;Investor SAFTs and Warnings&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#9-CoinList&quot;&gt;CoinList&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#10-Clients-and-Miners&quot;&gt;Clients &amp;amp; Miners&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-community-updates---an-overview&quot;&gt;1. Community Updates - an Overview&lt;/h2&gt;
&lt;p&gt;These updates will keep the Filecoin Community up to date on the progress of the Filecoin project and its &lt;a href=&quot;https://protocol.ai/projects/&quot;&gt;supporting projects&lt;/a&gt; (ie. &lt;a href=&quot;https://ipfs.io/&quot;&gt;IPFS&lt;/a&gt;, &lt;a href=&quot;https://libp2p.io/&quot;&gt;libp2p&lt;/a&gt;, &lt;a href=&quot;https://saftproject.com/&quot;&gt;the SAFT project&lt;/a&gt;, and others). We will also ask for your help. Keep an eye out for explicit “asks”, which highlight ways you can contribute to the success of Filecoin. We plan to broadcast these updates periodically – at least once a quarter, and in some cases more frequently. We will publish these to our new blog, and send them by email to our partners, investors, prospective users &amp;amp; miners, and general subscribers.&lt;/p&gt;

&lt;p&gt;Finally, we strongly encourage an open line of communication, with any suggestions, ideas, questions, feedback, or other thoughts. Please use this suggestion form or email us at team@filecoin.io with your comments. With thousands of people involved, we may take some time to respond, but we will read your note. This year, as our team’s capacity grows and we get closer to a testnet launch, we will open official community forums where the discussion can blossom broadly.&lt;/p&gt;

&lt;h2 id=&quot;2-asks---how-you-can-help&quot;&gt;2. Asks - How You Can Help&lt;/h2&gt;
&lt;p&gt;We have a unique opportunity to leverage the collective knowledge, capabilities, and networks of our formidable community to accelerate the success of Filecoin. We will be asking for your help along several dimensions: research problems, development and testing, organization building, partnerships, recruiting, and more.&lt;/p&gt;

&lt;p&gt;Here are some top priorities that our community can help us with in the short-term:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Refer candidates to hire (see list of high priority open positions in item 6 below)&lt;/li&gt;
  &lt;li&gt;Refer potential early storage users (Filecoin Early Users form)&lt;/li&gt;
  &lt;li&gt;Refer potential early miners (Filecoin Early Mining form)&lt;/li&gt;
  &lt;li&gt;Ideas, Suggestions, anything else? Please fill out our suggestion form&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Asks like these are typical in updates to project supporters, though perhaps more typical in private communications. We choose to publish these broadly, as we believe everybody in our community can contribute tremendously to the success of Filecoin, and it is in our shared interest to do so. The success of Filecoin will benefit all our community – miners, clients, partners, users, researchers, investors, developers, and more. Naturally, we require more from groups who have made strong commitments – such as developers and investors – but we want everybody to feel invited and empowered to help!&lt;/p&gt;

&lt;h2 id=&quot;3-launch-of-the-filecoin-blog&quot;&gt;3. Launch of the Filecoin Blog&lt;/h2&gt;
&lt;p&gt;This update marks the launch of the new Filecoin Blog. We have cross-posted all Filecoin specific posts from the Protocol Labs Blog, which we had been using to publish Filecoin news. Henceforth, this will be the main channel for Filecoin announcements.&lt;/p&gt;

&lt;p&gt;We have lots of plans for this blog in 2018. Expect to see technical deep-dives, explainers, event announcements, periodic updates like this one, and more. If you would like to request certain kinds of posts, feel free to send us suggestions.&lt;/p&gt;

&lt;h2 id=&quot;4-growth-and-adoption-of-ipfs&quot;&gt;4. Growth and Adoption of IPFS&lt;/h2&gt;
&lt;p&gt;IPFS and Filecoin are complementary protocols: IPFS addresses and moves content, and Filecoin is the missing incentive structure. Continued development of IPFS provides an important support layer for the Filecoin Protocol and continued adoption of IPFS signals increasing market demand for a faster, safer, decentralized storage service.&lt;/p&gt;

&lt;p&gt;Over the past few months the IPFS Community and the IPFS Network have made great strides. There were major releases for both go-ipfs (0.4.11, 0.4.12, 0.4.13) and js-ipfs (0.26.0, 0.27.0). People continue to build exciting apps on IPFS. For example, OpenBazaar shipped their 2.0 release, powered by IPFS, and grew their network to 25,000 nodes. There is a new integration of IPFS directly in the Brave browser. Computes are building a distributed supercomputer with IPFS. Researchers in Australia have put Hadoop on IPFS for peer-to-peer data analytics. It keeps getting easier to build applications like these. PeerPad is an open source app (in alpha) that shows how developers can use IPFS to build their own serverless, real-time, offline-first collaborative dapps. Cloudy is a GNU/Linux distribution built around decentralization and community networks. More and more projects in the blockchain ecosystem rely on IPFS and libp2p. New such projects include: DTube, a decentralized video platform; Bloom, a decentralized credit scoring system; Decentraland, a virtual reality platform; and more. We have also seen IPFS appear in important sociopolitical issues. When the Spanish government blocked access to information about the independence referendum in Catalonia, activists used IPFS to distribute censorship-resistant websites with sample ballots and lists of polling locations.&lt;/p&gt;

&lt;p&gt;IPFS continues to grow steadily, serve larger sets of users and more kinds of applications. But there is a lot more work to do to enable people and communities worldwide to control what data is stored on their machines and on their networks. The IPFS maintainers and the broader IPFS community are tackling that work with verve. Many IPFS developers eagerly await the arrival of Filecoin, which will enable large-scale decentralized storage for IPFS applications.&lt;/p&gt;

&lt;h2 id=&quot;5-launch-of-the-saft-project&quot;&gt;5. Launch of the SAFT Project&lt;/h2&gt;
&lt;p&gt;Over the past year we’ve dedicated a significant amount of energy and resources to develop a framework for legally compliant token sales. While the Filecoin Sale was the first use of that framework, we formally launched the SAFT Project in October - a collaboration between Protocol Labs, Cooley, and many other token creators, legal experts, and investors. Our goal is to approach legal protocol development the same way we approach software protocol development: with a thoughtful community, strong goals, and rigorous work. We hope our efforts will save creators much of the current headache, uncertainty, and cost associated with raising money for token networks.&lt;/p&gt;

&lt;p&gt;The reception and adoption has been tremendous. SAFTs have been used by token creators and investors to transact in dozens of token sales. It is estimated that close to or more than half a billion dollars has been transacted with SAFTs and recent regulatory action is congruent with the SAFT framework’s assessments. To find out more visit the SAFT Project Website and Github, or review some recent press from CoinDesk, CoinCenter, Forbes and The Economist.&lt;/p&gt;

&lt;h2 id=&quot;6-growing-the-team&quot;&gt;6. Growing the Team&lt;/h2&gt;
&lt;p&gt;Ambitious projects like Filecoin succeed or fail depending on their teams. One of our top priorities – in the past, present, and future – is to grow our team with brilliant, masterful, hardworking people who share our vision and mission. Our recruiting is focused on strengthening the core engineering, research, and business development teams, as well as filling a few key operational roles.&lt;/p&gt;

&lt;p&gt;Our network is large thanks to you. We need your help sourcing as many excellent candidates for our open positions. As a distributed team, we hire anywhere in the world, and at various levels of experience (entry, senior, staff, etc). We look for people with unique perspectives and diverse backgrounds. If you – or someone you know – may be a good fit, please apply.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Software Engineer, Distributed Systems&lt;/li&gt;
  &lt;li&gt;Software Engineer, Peer-to-Peer Networks&lt;/li&gt;
  &lt;li&gt;Software Engineer, Blockchain&lt;/li&gt;
  &lt;li&gt;Software Engineer, Infrastructure and Devops&lt;/li&gt;
  &lt;li&gt;Software Engineer, Testing&lt;/li&gt;
  &lt;li&gt;Software Engineer, Security&lt;/li&gt;
  &lt;li&gt;Software Engineer, Cryptography&lt;/li&gt;
  &lt;li&gt;Software Engineer, Frontend&lt;/li&gt;
  &lt;li&gt;Research Scientist, Cryptography&lt;/li&gt;
  &lt;li&gt;Research Scientist, Distributed Systems&lt;/li&gt;
  &lt;li&gt;Research Scientist, Networking&lt;/li&gt;
  &lt;li&gt;Open Source Project Manager&lt;/li&gt;
  &lt;li&gt;Open Source Product Manager&lt;/li&gt;
  &lt;li&gt;User Experience Designer&lt;/li&gt;
  &lt;li&gt;U.S. Legal Counsel&lt;/li&gt;
  &lt;li&gt;Legal Project Manager&lt;/li&gt;
  &lt;li&gt;Head of Finance&lt;/li&gt;
  &lt;li&gt;Investor Relations Manager&lt;/li&gt;
  &lt;li&gt;Asset Manager&lt;/li&gt;
  &lt;li&gt;Communications Lead&lt;/li&gt;
  &lt;li&gt;People Ops Coordinator&lt;/li&gt;
  &lt;li&gt;…and more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For a full list, please visit our current openings page. Please take a moment to share these role(s) with your network or email us with suggestions. We must cast a wide net in order to find the best candidates, and you can help us significantly in this effort.&lt;/p&gt;

&lt;h2 id=&quot;7-filecoin-engineering--development&quot;&gt;7. Filecoin Engineering &amp;amp; Development&lt;/h2&gt;
&lt;p&gt;We have been hard at work on implementing the Filecoin Protocol. Filecoin builds on the strong foundations laid by IPFS, libp2p, and Ethereum. This means a large number of very difficult pieces are already implemented, and we can focus on connecting these battle-tested components.&lt;/p&gt;

&lt;p&gt;The bulk of our implementation work involves building and testing new Filecoin-specific parts, which are still monumental endeavors. This includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the Filecoin Blockchain data structures and algorithms.&lt;/li&gt;
  &lt;li&gt;the State Tree, which represents all world state for files, accounts, and contracts on Filecoin.&lt;/li&gt;
  &lt;li&gt;the core contracts that will manage file Storage, Repair, Retrieval, and Mining.&lt;/li&gt;
  &lt;li&gt;contract execution itself, optimized for Filecoin.&lt;/li&gt;
  &lt;li&gt;library contracts for user agents, data storage and exchange, and other protocols.&lt;/li&gt;
  &lt;li&gt;low-level primitives such as Proofs-of-Replication and Proofs-of-Spacetime.&lt;/li&gt;
  &lt;li&gt;the Filecoin mining protocol, sequential work, and consensus.&lt;/li&gt;
  &lt;li&gt;economic structures, such as miner pledges, collaterals, storage and retrieval payments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We invite anybody interested in any of these parts, both research and implementation, to contact us at team@filecoin.io, specially people with backgrounds in cryptography research or distributed systems implementation.&lt;/p&gt;

&lt;h3 id=&quot;71-blockchain-ecosystem-rd&quot;&gt;7.1. Blockchain Ecosystem R&amp;amp;D&lt;/h3&gt;

&lt;p&gt;We continue to review and be inspired by the excellent work of other protocols and the academic community. In particular, we are paying close attention to many interesting developments, which may improve Filecoin. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Ethereum&lt;/strong&gt; has inspired lots of our work, and we are building with it. The list of things we leverage from Ethereum is long – the Blockchain state and execution models, the EVM, contract interfaces, and so on. Two recent interesting contributions are the addition of primitives required for zk-SNARKs directly to the EVM, and the exploration of WebAssembly as a compilation target (eWASM).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Zcash:&lt;/strong&gt; The Zcash team has been a leader in the development and application of zk-SNARKs, and is continuously pushing forward new research and improvements. Recent exciting developments include work on the BLS12-381 curve, and the Powers of Tau parameter generation ceremony.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Polkadot:&lt;/strong&gt; the team pursues many protocol and system improvements based on learnings from implementing Ethereum and many other protocols. One such decision: to formally distinguish and use hard-coding and soft-coding of core contracts where relevant, with a scheduled replacement (user space vs kernel space).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tezos:&lt;/strong&gt; we continue to study other VM and smart contract execution systems, especially those that aim towards formal verification. We applaud their work in this area, and continue to watch closely, as we believe blockchains desperately need programming languages with better properties (verifiability, stronger type systems, etc).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ethereum verification:&lt;/strong&gt; in the same vein, we are studying and experimenting with works that build safer languages on top of the EVM. There have been several promising papers, and we will be conducting evaluations and experiments in this area.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Of course&lt;/strong&gt;, we continue to leverage the improvements made by our teams and communities in the IPFS, libp2p, IPLD, and multiformats projects. These are also leveraged by other blockchain projects, which will build a stronger, more robust, and interoperable Web 3.0.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;STARKs and Bulletproofs:&lt;/strong&gt; it is a great time for verifiable computation. STARKs and Bulletproofs are two transparent non-interactive zero-knowledge proof systems, which Filecoin may use for some of its proof algorithms. We are exploring tradeoffs and constructions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;72-open-problems-and-rfps&quot;&gt;7.2 Open Problems and RFPs&lt;/h3&gt;
&lt;p&gt;Early in 2018, we will launch listings of open problems and a Request-for-Proposal (RFP) program to inspire and support work. The Open Problem listing will give us a venue to draw attention to important directions for improvements – for Filecoin and blockchains in general. The RFPs will allow us to motivate and reward people who help us solve those problems and implement their solutions. Keep an eye out for announcements!&lt;/p&gt;

&lt;h2 id=&quot;8-investor-safts-and-warnings&quot;&gt;8. Investor SAFTs and Warnings&lt;/h2&gt;
&lt;p&gt;In October, all investor SAFTs were sent out by email. We heard some of these emails were caught in spam filters, so to avoid issues we will be re-sending them again soon. We have also added a cryptographic signature to the SAFTs that verifies its validity, so the new version you will receive will be the definitive one. For more information on how to treat SAFTs and how tokens will be issued, please read the sale completion post or email us at sale@filecoin.io.&lt;/p&gt;

&lt;p&gt;Investor caution: during and after the Filecoin token sale we’ve seen several attempts to defraud investors from actors claiming to be selling Filecoin SAFTs or tokens. Similarly, we’ve seen unscrupulous exchanges listing Filecoin and Filecoin derivatives. Remember that the Filecoin token will not be live until network launch, and any exchange that lists Filecoin or IPFS tokens is likely fraudulent. We strongly recommend not trusting any exchange or entity who claims to be buying, selling, or trading Filecoin tokens or derivatives. We will announce here when the Filecoin Network and token go live, until then we strongly recommend staying away from such actors and exchanges.&lt;/p&gt;

&lt;h2 id=&quot;9-coinlist&quot;&gt;9. CoinList&lt;/h2&gt;
&lt;p&gt;We originally launched CoinList to make token-based fundraising easy and legally compliant. The platform innovated on many fronts. It developed new legal frameworks by introducing the SAFT instrument for the first time. It raised the bar for legal compliance. It introduced new payment options, accepting ETH, BTC, ZEC, and USD simultaneously. It incorporated security improvements, such as an IPFS-hosted HD Wallet verification tool. And it improved the investor experience through a modern user interface and structured email support.&lt;/p&gt;

&lt;p&gt;The Filecoin sale proved the CoinList platform. Since then, the project has attracted new token creators looking to launch their projects and more investors looking to invest in crypto-assets. To give the platform the attention it deserves, Protocol Labs and AngelList spun out CoinList as its own separate company with a dedicated team. Since September, CoinList has already completed two more sales – Blockstack and PROPS – and has grown into the leading platform for token fundraising and investment.&lt;/p&gt;

&lt;p&gt;During the transition, Filecoin SAFTs were temporarily removed from the CoinList platform, and will be added back in early 2018. For more information on CoinList, please visit coinlist.co.&lt;/p&gt;

&lt;h2 id=&quot;10-clients-and-miners&quot;&gt;10. Clients and Miners&lt;/h2&gt;
&lt;p&gt;Finally, the Filecoin Network is off to a very strong start. Tens of thousands of very enthusiastic early storage users and miners have already signed up for our early user and early miner programs. Currently we’re meeting with a small but wide-ranging subset of them, gathering insights to inform our design of onboarding experiences, market incentives, and more. Please spread the word on these forms – if you or someone you know are interested in becoming storage users or miners, notifying us sooner will help us plan with you.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For interested storage users, fill out the Filecoin Early Users form.&lt;/li&gt;
  &lt;li&gt;For interested miners, fill out the Filecoin Early Mining form.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for all your support so far, and in the future. And thank you in advance for your referrals, ideas, and suggestions. Your help is critical to our progress.&lt;/p&gt;

&lt;p&gt;All of us at Protocol Labs and the Filecoin Team wish you the best for the holidays, and for 2018, which should be a great year for all of us :)&lt;/p&gt;

&lt;p&gt;The Filecoin Team&lt;/p&gt;

&lt;p&gt;Protocol Labs&lt;/p&gt;

&lt;h2 id=&quot;加入链乎问答社区&quot;&gt;加入链乎问答社区&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/zhishixingqiu.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Jan 2018 00:00:00 +0800</pubDate>
        <link>https://sllinye.github.io//2018/01/02/Filecoin-2017-Q4-Update/</link>
        <guid isPermaLink="true">https://sllinye.github.io//2018/01/02/Filecoin-2017-Q4-Update/</guid>
        
        <category>IPFS</category>
        
        
      </item>
    
      <item>
        <title>Fabric 开发环境配置（2） - Ubuntu虚拟机和Mac/Windows主机如何实现文件共享</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://www.kongyixueyuan.com&quot;&gt;区块链技术视频：http://www.kongyixueyuan.com&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://liyuechun.org&quot;&gt;区块链技术博客：http://liyuechun.org&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;进区块链微信技术交流群，添加春哥微信：liyc1215&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;目录&quot;&gt;目录&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#1- VirtualBox虚拟机网络设置&quot;&gt;1. VirtualBox虚拟机网络设置&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-NAT-网络地址转换模式NAT-Network-Address-Translation&quot;&gt;1.1 NAT 网络地址转换模式(NAT,Network Address Translation)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12- Bridged-Adapter-桥接模式&quot;&gt;1.2 Bridged Adapter 桥接模式&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2- Mac/Windows和Ubuntu双向拷贝&quot;&gt;2. Mac/Windows和Ubuntu双向拷贝&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-文件共享&quot;&gt;3. 文件共享&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-Bridged-Adapter网络配置&quot;&gt;3.1 Bridged Adapter网络配置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-在Ubuntu上安装Samba服务器&quot;&gt;3.2 在Ubuntu上安装Samba服务器&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-设置要共享的文件夹&quot;&gt;3.3 设置要共享的文件夹&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#34-在Ubuntu上配置Samba服务器&quot;&gt;3.4 在Ubuntu上配置Samba服务器&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#35-添加共享文件&quot;&gt;3.5 添加共享文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#36-Mac/Windows访问Ubuntu共享文件夹&quot;&gt;3.6 Mac/Windows访问Ubuntu共享文件夹&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-小结&quot;&gt;4. 小结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在上一篇文档&lt;a href=&quot;http://liyuechun.org/2017/12/07/virtual_ubuntu/&quot;&gt;Fabric 开发环境配置（1） - Ubuntu操作系统安装配置&lt;/a&gt;中，我们介绍了&lt;code class=&quot;highlighter-rouge&quot;&gt;Mac/Windows&lt;/code&gt;如何安装虚拟机、如何在虚拟机中安装&lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;操作系统以及如何安装配置搜狗输入法。&lt;/p&gt;

&lt;p&gt;这篇文章，&lt;a href=&quot;http://liyuechun.org&quot;&gt;春哥&lt;/a&gt;将为大家介绍&lt;strong&gt;Ubuntu虚拟机和Mac/Windows主机如何实现文件共享&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;1-virtualbox虚拟机网络设置&quot;&gt;1. VirtualBox虚拟机网络设置&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;VirtualBox虚拟机网络设置一共有下面四种方式：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1、&lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt; 网络地址转换模式&lt;code class=&quot;highlighter-rouge&quot;&gt;(NAT,Network Address Translation) &lt;/code&gt;
2、&lt;code class=&quot;highlighter-rouge&quot;&gt;Bridged Adapter&lt;/code&gt;桥接模式 
3、&lt;code class=&quot;highlighter-rouge&quot;&gt;Internal&lt;/code&gt; 内部网络模式 
4、&lt;code class=&quot;highlighter-rouge&quot;&gt;Host-only Adapter&lt;/code&gt; 主机模式&lt;/p&gt;

&lt;p&gt;在本篇文章中，我主要介绍&lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;Bridged Adapter&lt;/code&gt;两种模式。&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt;不能实现主机和虚拟机互通，&lt;code class=&quot;highlighter-rouge&quot;&gt;Bridged Adapter&lt;/code&gt;可以实现主机与虚拟机互通。&lt;/strong&gt; &lt;/p&gt;

&lt;h3 id=&quot;11-nat-网络地址转换模式natnetwork-address-translation&quot;&gt;1.1 NAT 网络地址转换模式(NAT,Network Address Translation)&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt;模式是最简单的实现虚拟机上网的方式，你可以这样理解：&lt;code class=&quot;highlighter-rouge&quot;&gt;Vhost&lt;/code&gt;访问网络的所有数据都是由主机提供的，&lt;code class=&quot;highlighter-rouge&quot;&gt;Vhost&lt;/code&gt;并不真实存在于网络中，主机与网络中的任何机器都不能查看和访问到&lt;code class=&quot;highlighter-rouge&quot;&gt;Vhost&lt;/code&gt;的存在。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;虚拟机与主机关系：&lt;/strong&gt;只能单向访问，虚拟机可以通过网络访问到主机，主机无法通过网络访问到虚拟机。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;虚拟机与网络中其他主机的关系：&lt;/strong&gt;只能单向访问，虚拟机可以访问到网络中其他主机，其他主机不能通过网络访问到虚拟机。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;虚拟机与虚拟机之间的关系：&lt;/strong&gt;相互不能访问，虚拟机与虚拟机各自完全独立，相互间无法通过网络访问彼此。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;虚拟机的IP、网关、DNS&lt;/strong&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;NAT方案缺点：&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;由于虚拟机和主机IP不在同一个网段，所以主机没办法和虚拟机实现文件共享。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;12-bridged-adapter-桥接模式&quot;&gt;1.2 Bridged Adapter 桥接模式&lt;/h3&gt;

&lt;p&gt;网桥模式是我最喜欢的用的一种模式，同时，模拟度也是相当完美。你可以这样理解，它是通过主机网卡，架设了一条桥，直接连入到网络中了。因此，它使得虚拟机能被分配到一个网络中&lt;strong&gt;独立的IP&lt;/strong&gt;，所有网络功能完全和在网络中的真实机器一样。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;虚拟机与主机关系：&lt;/strong&gt; 可以相互访问，因为虚拟机在真实网络段中有独立&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;，主机与虚拟机处于同一网络段中，彼此可以通过各自&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;相互访问。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;虚拟机与网络中其他主机关系：&lt;/strong&gt;可以相互访问，同样因为虚拟机在真实网络段中有独立&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;，虚拟机与所有网络其他主机处于同一网络段中，彼此可以通过各自&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;相互访问。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;虚拟机与虚拟机关系：&lt;/strong&gt; 可以相互访问。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;IP：&lt;/strong&gt;一般是&lt;code class=&quot;highlighter-rouge&quot;&gt;DHCP&lt;/code&gt;分配的，与主机的&lt;code class=&quot;highlighter-rouge&quot;&gt;本地连接&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;是同一网段的。虚拟机就能与主机互相通信。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;笔记本已插网线时：&lt;/strong&gt;（若网络中有&lt;code class=&quot;highlighter-rouge&quot;&gt;DHCP&lt;/code&gt;服务器）主机与虚拟机会通过&lt;code class=&quot;highlighter-rouge&quot;&gt;DHCP&lt;/code&gt;分别得到一个&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;，这两个&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;在同一网段。 主机与虚拟机可以&lt;code class=&quot;highlighter-rouge&quot;&gt;ping&lt;/code&gt;通，虚拟机可以上互联网。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;笔记本没插网线时：&lt;/strong&gt;&lt;strong&gt;主机与虚拟机不能通信。&lt;/strong&gt;主机的&lt;code class=&quot;highlighter-rouge&quot;&gt;本地连接&lt;/code&gt;有红叉，就不能手工指定&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;。虚拟机也不能通过&lt;code class=&quot;highlighter-rouge&quot;&gt;DHCP&lt;/code&gt;得到&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;地址，手工指定&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;后，也无法与主机通信，因为主机无&lt;code class=&quot;highlighter-rouge&quot;&gt;IP。&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-macwindows和ubuntu双向拷贝&quot;&gt;2. Mac/Windows和Ubuntu双向拷贝&lt;/h2&gt;

&lt;p&gt;默认情况下，虚拟机和主机之间的拷贝的数据不能直接粘贴，我们可以通过下面的设置来实现数据双向拷贝。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Virtual Box&lt;/code&gt;设置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/WX20171208-151709@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/WX20171208-151954@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/install_tool.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;按照上面三个步骤设置完以后，接下来你就可以实现虚拟机与主机双向拷贝。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/%E4%B8%BB%E6%9C%BA%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8C%E5%90%91%E6%8B%B7%E8%B4%9D-iloveimg-compressed.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-文件共享&quot;&gt;3. 文件共享&lt;/h2&gt;

&lt;p&gt;由于&lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt;网络虚拟机和主机&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;地址不在同一个网段，因此需要通过&lt;code class=&quot;highlighter-rouge&quot;&gt;Bridged Adapter&lt;/code&gt;模式来实现虚拟机和主机在同一个局域网。&lt;/p&gt;

&lt;h3 id=&quot;31-bridged-adapter网络配置&quot;&gt;3.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bridged Adapter&lt;/code&gt;网络配置&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;连接网线,连接网线,连接网线&lt;/strong&gt;重要的事情别人说三遍，我习惯说四遍。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bridged Adapter&lt;/code&gt;配置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_23.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_24.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_25.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_26.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;地址查询，&lt;code class=&quot;highlighter-rouge&quot;&gt;ping&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_27.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_28.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/mac_ping_ubuntu.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;32-在ubuntu上安装samba服务器&quot;&gt;3.2 在Ubuntu上安装Samba服务器&lt;/h3&gt;

&lt;p&gt;你可以很方便地在Ubuntu电脑上安装&lt;code class=&quot;highlighter-rouge&quot;&gt;Samba&lt;/code&gt;。安装前，请先更新系统以便安装任何可用的更新。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get update &amp;amp;&amp;amp; apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后按照这条命令安装&lt;code class=&quot;highlighter-rouge&quot;&gt;samba&lt;/code&gt;和少量所需的软件包：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get install samba samba-common system-config-samba python-glade2 gksu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;一旦安装完成&lt;code class=&quot;highlighter-rouge&quot;&gt;Samba&lt;/code&gt;服务器，就可以从图形界面配置&lt;code class=&quot;highlighter-rouge&quot;&gt;Samba&lt;/code&gt;来分享文件。&lt;/p&gt;

&lt;h3 id=&quot;33-设置要共享的文件夹&quot;&gt;3.3 设置要共享的文件夹&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_35.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_36.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_37.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;34-在ubuntu上配置samba服务器&quot;&gt;3.4 在Ubuntu上配置Samba服务器&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_29.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_30.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_31.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_32.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_33.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_34.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;35-添加共享文件&quot;&gt;3.5 添加共享文件&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_38.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_39.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_40.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;36-macwindows访问ubuntu共享文件夹&quot;&gt;3.6 Mac/Windows访问Ubuntu共享文件夹&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_41.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_42.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_43.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_44.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/Snip20171208_45.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/20171208173445.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-小结&quot;&gt;4. 小结&lt;/h2&gt;

&lt;p&gt;本篇文章主要为大家介绍了VirtualBox虚拟机网络设置&lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;Bridged Adapter 桥接模式&lt;/code&gt;之间的区别，如何配置&lt;code class=&quot;highlighter-rouge&quot;&gt;Bridged Adapter 桥接模式&lt;/code&gt;以实现主机和虚拟机之间在同一个局域网。&lt;code class=&quot;highlighter-rouge&quot;&gt;SMB&lt;/code&gt;服务器安装配置，数据共享相关设置。&lt;/p&gt;

&lt;h2 id=&quot;5技术交流&quot;&gt;5、技术交流&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;区块链技术交流QQ群：&lt;code class=&quot;highlighter-rouge&quot;&gt;348924182&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;进微信群请加微信：&lt;code class=&quot;highlighter-rouge&quot;&gt;liyc1215&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;「区块链部落」官方公众号&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/%E5%8C%BA%E5%9D%97%E9%93%BE%E9%83%A8%E8%90%BD.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 08 Dec 2017 00:00:00 +0800</pubDate>
        <link>https://sllinye.github.io//2017/12/08/mac-ubuntu-data-share/</link>
        <guid isPermaLink="true">https://sllinye.github.io//2017/12/08/mac-ubuntu-data-share/</guid>
        
        <category>Fabric</category>
        
        
      </item>
    
      <item>
        <title>Fabric 开发环境配置（1） - Ubuntu操作系统安装配置</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://www.kongyixueyuan.com&quot;&gt;区块链技术视频：http://www.kongyixueyuan.com&lt;/a&gt;
&lt;a href=&quot;http://liyuechun.org&quot;&gt;区块链技术博客：http://liyuechun.org&lt;/a&gt;
进区块链微信技术交流群，添加春哥微信：liyc1215&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;之前&lt;a href=&quot;http://liyuechun.org&quot;&gt;春哥&lt;/a&gt;给大家讲解周末班、公开课以及相关教程时，都是直接使用的&lt;code class=&quot;highlighter-rouge&quot;&gt;Mac OS&lt;/code&gt;，但是我发现&lt;code class=&quot;highlighter-rouge&quot;&gt;40%&lt;/code&gt;的学员用的是&lt;code class=&quot;highlighter-rouge&quot;&gt;Windows&lt;/code&gt;，从这篇文章开始，我将统一用&lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;操作系统写教程、录制视频以及讲解课程。&lt;/p&gt;

&lt;p&gt;这篇文章&lt;a href=&quot;http://liyuechun.org&quot;&gt;春哥&lt;/a&gt;主要为大家分享如何在&lt;code class=&quot;highlighter-rouge&quot;&gt;windows&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;Mac&lt;/code&gt;上安装虚拟机，如何通过虚拟机安装&lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;操作系统，如何配置&lt;code class=&quot;highlighter-rouge&quot;&gt;搜狗&lt;/code&gt;拼音输入法。下篇将为大家分享&lt;code class=&quot;highlighter-rouge&quot;&gt;Fabric 开发环境配置（2） - 虚拟机和主机如何实现文件共享&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;目录&quot;&gt;目录&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#一、下载安装VirtualBox&quot;&gt;一、下载安装VirtualBox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#二、安装Ubuntu操作系统&quot;&gt;二、安装Ubuntu操作系统&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#三、下篇预告&quot;&gt;三、下篇预告&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;一下载安装virtualbox&quot;&gt;一、下载安装VirtualBox&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;下载&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;移步到&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;https://www.virtualbox.org/wiki/Downloads&lt;/a&gt;网站，如下图所示，选择&lt;code class=&quot;highlighter-rouge&quot;&gt;Windows&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;Mac&lt;/code&gt;操作系统对应的安装包下载并安装。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/WX20171208-095849@2x.png&quot; alt=&quot;VirtualBox 下载安装&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;安装&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;根据不同的操作系统下载对应的版本，直接双击一步步按照提示安装即可。&lt;/p&gt;

&lt;h2 id=&quot;二安装ubuntu操作系统&quot;&gt;二、安装Ubuntu操作系统&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;下载&lt;a href=&quot;https://pan.baidu.com/s/1kVlBMib&quot;&gt;Ubuntu操作系统镜像文件&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/WX20171208-102258@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;按照步骤通过镜像安装操作系统&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1207_1.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1207_2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;选择一个内存大小，内存越大，速度越快&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1207_3.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1207_4.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1207_5.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1207_6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;虚拟硬盘大小设置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1207_7.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1207_8.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1207_9.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1207_10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;放心，这里直接往下安装，不会删除你电脑的任何数据和文档&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1208_1.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1208_2.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1208_3.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1208_4.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1208_5.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1208_6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;打开浏览器安装Linux版的搜狗输入法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1208_13.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1208_14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;重启虚拟机&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1_1208_7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;三下篇预告&quot;&gt;三、下篇预告&lt;/h2&gt;

&lt;p&gt;到这里相信大家已经在自己的电脑上成功安装虚拟机以及&lt;code class=&quot;highlighter-rouge&quot;&gt;linux&lt;/code&gt;操作系统，但是大家会发现一个问题，在我们的&lt;code class=&quot;highlighter-rouge&quot;&gt;linux&lt;/code&gt;中创建的一些文件和代码怎么直接拷贝到主机，或者说主机的一些文件和资料怎么和虚拟机共享呢，下一小节中，春哥将为大家分享&lt;code class=&quot;highlighter-rouge&quot;&gt;Fabric 开发环境配置（2） - 虚拟机和主机如何实现文件共享&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;四技术交流&quot;&gt;四、技术交流&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;区块链技术交流QQ群：&lt;code class=&quot;highlighter-rouge&quot;&gt;348924182&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;进微信群请加微信：&lt;code class=&quot;highlighter-rouge&quot;&gt;liyc1215&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;「区块链部落」官方公众号&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/%E5%8C%BA%E5%9D%97%E9%93%BE%E9%83%A8%E8%90%BD.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 07 Dec 2017 00:00:00 +0800</pubDate>
        <link>https://sllinye.github.io//2017/12/07/virtual_ubuntu/</link>
        <guid isPermaLink="true">https://sllinye.github.io//2017/12/07/virtual_ubuntu/</guid>
        
        <category>Fabric</category>
        
        
      </item>
    
      <item>
        <title>不管是链圈，还是币圈，你都应该了解矿工、加密货币、矿池生态系</title>
        <description>&lt;p&gt;用电脑…挖矿？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1214_01.png&quot; alt=&quot;电脑挖矿&quot; /&gt;&lt;/p&gt;

&lt;p&gt;所谓挖矿就是让电脑执行特定程序，迭代找出某个值&lt;code class=&quot;highlighter-rouge&quot;&gt;nonce&lt;/code&gt;代入符合&lt;code class=&quot;highlighter-rouge&quot;&gt;HashFunction（TXs+nonce）&amp;lt; TargetDifficulty&lt;/code&gt;的解来给自己「挖出」一些加密货币。&lt;code class=&quot;highlighter-rouge&quot;&gt;Bitcoin&lt;/code&gt;用的函数是两次的&lt;code class=&quot;highlighter-rouge&quot;&gt;SHA256&lt;/code&gt;，而&lt;code class=&quot;highlighter-rouge&quot;&gt;Ethereum&lt;/code&gt;则是使用自己发明的&lt;a href=&quot;https://github.com/ethereum/wiki&quot;&gt;Ethash&lt;/a&gt;算法。&lt;/p&gt;

&lt;p&gt;挖矿的本质就像买乐透，尽管内存块奖励是先抢先赢，算力强的矿工也只是「较有机会」挖到矿，小矿工理论上仍能取得成比例的报酬。但随着全世界的人不断不断的投入资源、建置更多的挖矿设备，现在以个人之力挖到矿的机率已经非常非常小。&lt;/p&gt;

&lt;p&gt;以&lt;code class=&quot;highlighter-rouge&quot;&gt;Ethereum&lt;/code&gt;为例，一张中高阶显卡每秒可以做三千万次&lt;code class=&quot;highlighter-rouge&quot;&gt;Hash&lt;/code&gt;，但挖到矿平均需要一千两百兆次的尝试&lt;code class=&quot;highlighter-rouge&quot;&gt;（2017/7/16）&lt;/code&gt;，算起来平均要&lt;code class=&quot;highlighter-rouge&quot;&gt;1.26&lt;/code&gt;年才会挖到一次，普通矿工根本没办法承受如此不稳定的收入。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;凭个人之力挖矿太看天吃饭，矿工们合起来建造了矿池。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1214_02.jpeg&quot; alt=&quot;孔壹学院&quot; /&gt;&lt;/p&gt;

&lt;p&gt;基本上，矿池要解决的是矿工收入不稳定的问题，它把散落的运算资源整合起来一起挖矿，挖到之后再按照每个矿工的贡献比例分钱下去，概念上就像集资包牌买乐透，用众人之力把收入的机率分布摊平。此外，矿池负责维护节点运作，矿工可以专心在运算上，也降低了挖矿的成本，矿池则收取少量手续费。&lt;/p&gt;

&lt;p&gt;理想的矿池和矿工之间的分工大致是这样：矿池藉由连接内存块链网络的节点接收交易信息，产生待打包的内存块广播给矿工，并分配每个矿工负责寻找&lt;code class=&quot;highlighter-rouge&quot;&gt;nonce&lt;/code&gt;的范围。通常矿池会设定一个比较低的门坎，可能是实际&lt;code class=&quot;highlighter-rouge&quot;&gt;target difficulty&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;1/1000000&lt;/code&gt;，矿工找到符合的&lt;code class=&quot;highlighter-rouge&quot;&gt;nonce&lt;/code&gt;就回报给矿池，矿池验算后就记录为一个&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;，再用每个矿工提交的&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;估算贡献比例。因为矿工已经筛选出一些不错的&lt;code class=&quot;highlighter-rouge&quot;&gt;nonce&lt;/code&gt;，矿池可以很容易的从中找出够小的值去符合真正挖矿的标准，层层过滤的过程和淘金矿倒有几分相似。&lt;/p&gt;

&lt;p&gt;就像跟人包牌买乐透怕被独吞一样，难道矿池不担心矿工把可以挖到矿的&lt;code class=&quot;highlighter-rouge&quot;&gt;nonce&lt;/code&gt;私藏，只把挖不到但符合&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;标准的&lt;code class=&quot;highlighter-rouge&quot;&gt;nonce&lt;/code&gt;交出来混钱吗？答案是否定的，因为在开始挖矿之前，我们要先决定好的那个&lt;code class=&quot;highlighter-rouge&quot;&gt;TXs&lt;/code&gt;交易纪录内存块里面，就会标示这个块的&lt;code class=&quot;highlighter-rouge&quot;&gt;miner&lt;/code&gt;是谁，所以当矿工对着矿池给好的数据做运算，找出来的&lt;code class=&quot;highlighter-rouge&quot;&gt;valid share&lt;/code&gt;就具有专一性，即使矿工真的找到某个符合&lt;code class=&quot;highlighter-rouge&quot;&gt;Hash（“TX”+nonce）&amp;lt;TargetDifficulty&lt;/code&gt;的值想要自己私藏拿去领赏，最后仍是矿池会收到钱，这个矿工还会少一个&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;，理论上没有动机这么做。&lt;/p&gt;

&lt;p&gt;矿池不担心矿工卷款潜逃，但要如何公平地分配收益仍是个困难的问题。目前比较常见的分润模式有：&lt;code class=&quot;highlighter-rouge&quot;&gt;PPS（Pay Per Share），PPLNS（Pay Per Last N Share），RBPPS（Round Base Pay Per Share）&lt;/code&gt;三种，各有优缺点和不同的风险承担角色。&lt;/p&gt;

&lt;p&gt;采&lt;code class=&quot;highlighter-rouge&quot;&gt;PPS&lt;/code&gt;模式的矿池会在矿工每次提交&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;的时候立刻认列，是最简单好懂的模式。每个&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;的价格是预先决定并动态调整的，相当于矿池「买」了这个&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;，矿工的收入稳定，而实际挖到的块多寡则由矿池概括承受，所以通常会抽取较高的手续费。&lt;/p&gt;

&lt;p&gt;相较之下，&lt;code class=&quot;highlighter-rouge&quot;&gt;PPLNS&lt;/code&gt;模式只会在矿池确定有收入的时候才发钱。每次挖到矿会参照矿工前一段时间的&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;数分配收益，波动由矿工和矿池共同承担，通常会用随时间递减的权重计算，收入较为平滑，但实作上会比较复杂一点。&lt;/p&gt;

&lt;p&gt;至于&lt;code class=&quot;highlighter-rouge&quot;&gt;RBPPS&lt;/code&gt;则完全由矿工承担风险，它像&lt;code class=&quot;highlighter-rouge&quot;&gt;PPS&lt;/code&gt;一样实时认列，但不直接发钱，而是登记为一个&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;，每次挖到块称为一个&lt;code class=&quot;highlighter-rouge&quot;&gt;round&lt;/code&gt;，再依照这个&lt;code class=&quot;highlighter-rouge&quot;&gt;round&lt;/code&gt;期间你占的&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;比例分润，矿工收益完全看矿池出块是否稳定。&lt;/p&gt;

&lt;p&gt;因为实作起来简单，&lt;code class=&quot;highlighter-rouge&quot;&gt;RBPPS&lt;/code&gt;是目前许多开源矿池采用的模式，但也存在着一些问题，对总算力低的矿池而言出块间隔长短并不稳定，随着矿工们的&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;持续累积，继续挖矿的收益期望值会随着分母上升而递减，矿工有经济诱因在很久没出块时切到其他矿池挖矿，等本来的矿池出块后再切回来，但如果每个矿工都这么做，矿池就停摆了。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import random

selfshare = 0.0
totalshare = 0.0
x=0.9
y=0.09
z=0.01
selfreward=0.0
poolreward=0.0

for i in range(10000):
	if totalshare &amp;lt;=1:
		selfshare+=z
		totalshare+=(y+z)
		if random.random()&amp;lt;0.1:
			selfreward+=5*0.1
			poolreward+=5*0.9
			selfshare=0
			totalshare=0
	else:
		totalshare+=y
		if random.random()&amp;lt;0.09:
			selfreward+=5*selfshare/totalshare
			poolreward+=5*(1-selfshare/totalshare)
			selfshare=0
			totalshare=0
		else:
			selfreward+=5*z/(z+x)

print(selfreward)
print(poolreward)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;此外，也有矿池采用类似线上游戏的&lt;code class=&quot;highlighter-rouge&quot;&gt;DKP&lt;/code&gt;制度，矿工每次挖到块会累积&lt;code class=&quot;highlighter-rouge&quot;&gt;credit&lt;/code&gt;，当有块挖出来的时候就由当时&lt;code class=&quot;highlighter-rouge&quot;&gt;credit&lt;/code&gt;最高的矿工全拿，并把他的&lt;code class=&quot;highlighter-rouge&quot;&gt;credit&lt;/code&gt;归零。但这种模式显然对小矿工不利，期望值算起来大矿工会拿到不符比例多的额外收益。&lt;/p&gt;

&lt;p&gt;总的来说，不同的分润模式都是在追求矿工收入稳定、公平、低矿池风险之间的权衡。大矿池有足够的资源请工程师优化系统，也较能提供矿工稳定的收入，小矿池则有灵活的优势，可以经营名气尚小的潜质币种。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;营运矿池的各种经济考察&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1214_03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;通常矿工在意的不外乎是矿池的手续费高低、收入波动、服务器稳定度三项重点。矿池收取的手续费除了要付维护系统跟电费的开支，还要在给矿工发薪水的时候承担链上&lt;code class=&quot;highlighter-rouge&quot;&gt;（on-chain）&lt;/code&gt;交易的手续费，所以一般会在累积到一大笔钱的时候再一次性支付。当矿池规模渐渐扩大的时候，光支付就会产生庞大的交易流量，常常处理不完造成堵车。&lt;/p&gt;

&lt;p&gt;最近有&lt;code class=&quot;highlighter-rouge&quot;&gt;Ethereum&lt;/code&gt;矿池尝试用智能合约实现类似&lt;code class=&quot;highlighter-rouge&quot;&gt;Bitcoin&lt;/code&gt;单笔交易包含多地址支付的功能，但似乎会让交易所钱包辨识失败，猜测原因是因为底层节点&lt;code class=&quot;highlighter-rouge&quot;&gt;geth&lt;/code&gt;的监听功能&lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt;只会对交易的第一组地址有反应，导致后续的交易没被听见，以致于无法触发交易所入账的事件。满期待交易所能改一下构架，否则都不能用智能合约支付，对许多&lt;code class=&quot;highlighter-rouge&quot;&gt;Ethereum&lt;/code&gt;应用来说也挺困扰的。&lt;/p&gt;

&lt;p&gt;目前已经可以在&lt;code class=&quot;highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;上找到几组开源的&lt;code class=&quot;highlighter-rouge&quot;&gt;矿池程序&lt;/code&gt;，稍有经验的人都能轻易的架起矿池。但尽管架池简单，经营倒挺困难，要找到足够的矿工和算力加入才能确保收入稳定。比起矿工是单纯的设备成本收入考察，经营矿池有时候更像在经营社群，需要培养一定的群众，提供不错的周边服务，才能让矿工愿意在收益变化的时候不至于军心溃散，肯留下来跟着矿池一起打拼。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/1215_04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;原文链接：&lt;code class=&quot;highlighter-rouge&quot;&gt;https://medium.com/taipei-ethereum-meetup/%E5%8A%A0%E5%AF%86%E8%B2%A8%E5%B9%A3%E8%88%87%E4%BB%96%E5%80%91%E7%9A%84%E7%94%A2%E5%9C%B0-21a52c51427f&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;技术交流&quot;&gt;技术交流&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;区块链技术交流QQ群：&lt;code class=&quot;highlighter-rouge&quot;&gt;348924182&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;进微信群请加微信：&lt;code class=&quot;highlighter-rouge&quot;&gt;liyc1215&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;「区块链部落」官方公众号&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/%E5%8C%BA%E5%9D%97%E9%93%BE%E9%83%A8%E8%90%BD.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 04 Dec 2017 00:00:00 +0800</pubDate>
        <link>https://sllinye.github.io//2017/12/04/token_pool/</link>
        <guid isPermaLink="true">https://sllinye.github.io//2017/12/04/token_pool/</guid>
        
        <category>挖矿</category>
        
        
      </item>
    
      <item>
        <title>区块链工程师学习路线图</title>
        <description>&lt;p&gt;大家都知道，学习任何一门新技术时，大家刚开始都会无从下手，不知道怎么入门，不知道学习顺序，不知道怎样去学，因此&lt;a href=&quot;http://liyuechun.org&quot;&gt;春哥&lt;/a&gt;特意整理了这一张&lt;code class=&quot;highlighter-rouge&quot;&gt;区块链工程师学习路线图&lt;/code&gt;，供大家学习参考。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;大家可关注公众号，实时查看最新版本的学习路线图。&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;作者：黎跃春，孔壹学院、BloggerChain创始人&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E5%9B%BE.png&quot; alt=&quot;区块链工程师学习路线图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://om1c35wrq.bkt.clouddn.com/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E5%9B%BE.png&quot; alt=&quot;区块链学习路线图&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 03 Dec 2017 00:00:00 +0800</pubDate>
        <link>https://sllinye.github.io//2017/12/03/Blockchain_engineer_learning_roadmap/</link>
        <guid isPermaLink="true">https://sllinye.github.io//2017/12/03/Blockchain_engineer_learning_roadmap/</guid>
        
        <category>安全</category>
        
        
      </item>
    
  </channel>
</rss>
